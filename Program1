program1 
CREATE TABLE branch (
    branchid INT PRIMARY KEY,
    bname VARCHAR(10),
    hod VARCHAR(10)
);

CREATE TABLE student (
    usn VARCHAR(10) PRIMARY KEY,
    name VARCHAR(10),
    addr VARCHAR(15),
    branchid INT REFERENCES branch(branchid),
    sem INT
);

CREATE TABLE author (
    authorid INT PRIMARY KEY,
    aname VARCHAR(10),
    country VARCHAR(10),
    age INT
);

CREATE TABLE book (
    bookid INT PRIMARY KEY,
    bname VARCHAR(10),
    authorid INT REFERENCES author(authorid),
    publisher VARCHAR(10),
    branchid INT REFERENCES branch(branchid)
);

CREATE TABLE borrow (
    usn VARCHAR(10) REFERENCES student(usn),
    bookid INT REFERENCES book(bookid),
    borrowdate DATE,
    PRIMARY KEY (usn, bookid) -- Added composite primary key
);

-- Insert data into branch table
INSERT INTO branch (branchid, bname, hod) VALUES
(1, 'CSE', 'Dr. A'),
(2, 'ECE', 'Dr. B'),
(3, 'MECH', 'Dr. C');

-- Insert data into student table
INSERT INTO student (usn, name, addr, branchid, sem) VALUES
('S101', 'Alice', 'Bangalore', 1, 4),
('S102', 'Bob', 'Mysore', 2, 3),
('S103', 'Charlie', 'Delhi', 1, 5);

-- Insert data into author table
INSERT INTO author (authorid, aname, country, age) VALUES
(1, 'Tolkien', 'UK', 81),
(2, 'Rowling', 'UK', 58),
(3, 'Asimov', 'USA', 72);

-- Insert data into book table
INSERT INTO book (bookid, bname, authorid, publisher, branchid) VALUES
(1, 'LOTR', 1, 'Harper', 1),
(2, 'HP', 2, 'Bloomsbury', 2),
(3, 'Foundation', 3, 'Random', 1);

-- Insert data into borrow table
INSERT INTO borrow (usn, bookid, borrowdate) VALUES
('S101', 1, '2025-03-01'),
('S102', 2, '2025-03-05'),
('S103', 3, '2025-03-10');

-- Retrieve all data from tables in one window
SELECT * FROM branch;
SELECT * FROM student;
SELECT * FROM author;
SELECT * FROM book;
SELECT * FROM borrow;


Query 1
SELECT * FROM student 
WHERE sem = 2 
AND branchid IN 
(SELECT branchid FROM branch WHERE bname = 'MCA');

Query 2
SELECT * FROM student 
WHERE usn NOT IN 
(SELECT usn FROM borrow);

Query 3 
SELECT student.usn, student.name, branch.bname, book.bname, author.aname 
FROM student, branch, book, author, borrow 
WHERE student.usn = borrow.usn 
AND borrow.bookid = book.bookid 
AND book.authorid = author.authorid 
AND student.branchid = branch.branchid 
AND student.sem = 2 
AND branch.bname = 'MCA';

Query 4
SELECT COUNT(*), authorid 
FROM book 
GROUP BY authorid;

Query 5 
SELECT * FROM student 
WHERE usn IN 
(SELECT usn FROM borrow GROUP BY usn HAVING COUNT(usn) >= 2);

Query 6
SELECT * FROM student 
WHERE EXISTS (
    SELECT usn FROM borrow 
    JOIN book ON borrow.bookid = book.bookid 
    WHERE borrow.usn = student.usn 
    GROUP BY usn 
    HAVING COUNT(DISTINCT authorid) > 1
);

Query 7 
SELECT bname FROM book 
ORDER BY bname DESC;

Query 8
SELECT * FROM student 
WHERE EXISTS (
    SELECT usn FROM borrow 
    JOIN book ON borrow.bookid = book.bookid 
    GROUP BY usn 
    HAVING COUNT(DISTINCT publisher) = 1
);
